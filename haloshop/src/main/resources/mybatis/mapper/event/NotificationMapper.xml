<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.company.haloshop.notification.NotificationMapper">

    <resultMap id="NotificationResultMap" type="com.company.haloshop.notification.Notification">
        <id property="id" column="id"/>
        <result property="referenceId" column="reference_id"/>
        <result property="isRead" column="is_read"/>
        <result property="createdAt" column="created_at"/>

        <association property="receiver" javaType="com.company.haloshop.entity.member.Account">
            <id property="id" column="receiver_id"/>
            <result property="nickname" column="receiver_nickname"/>
        </association>

        <association property="entity" javaType="com.company.haloshop.event.EventEntity">
            <id property="id" column="entity_id"/>
            <result property="name" column="entity_name"/>
        </association>
    </resultMap>

    <!-- 1. 알림 생성 -->
    <insert id="insert" parameterType="com.company.haloshop.notification.Notification" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO notification (receiver_id, entity_id, reference_id, is_read, created_at)
        VALUES (#{receiver.id}, #{entity.id}, #{referenceId}, #{isRead}, #{createdAt})
    </insert>
    
    <!-- ✅ 연관 객체 포함된 알림 조회 -->
    <select id="findById" parameterType="long" resultMap="NotificationResultMap">
        SELECT 
            n.id,
            n.receiver_id,
            a.nickname AS receiver_nickname,
            n.entity_id,
            e.name AS entity_name,
            n.reference_id,
            n.is_read,
            n.created_at
        FROM notification n
        LEFT JOIN account a ON n.receiver_id = a.id
        LEFT JOIN event_entity e ON n.entity_id = e.id
        WHERE n.id = #{id}
    </select>

    <select id="findByReceiverId" parameterType="long" resultMap="NotificationResultMap">
	  SELECT
	    n.id,
	    n.receiver_id,
	    a.id AS receiver_id,
	    a.nickname AS receiver_nickname,
	    n.entity_id,
	    e.id AS entity_id,
	    e.name AS entity_name,
	    n.reference_id,
	    n.is_read,
	    n.created_at
	  FROM notification n
	  LEFT JOIN account a ON n.receiver_id = a.id
	  LEFT JOIN event_entity e ON n.entity_id = e.id
	  WHERE n.receiver_id = #{receiverId}
	  ORDER BY n.created_at DESC
	</select>

    <!-- 3. 알림 읽음 상태 업데이트 -->
    <update id="updateById" parameterType="map">
        UPDATE notification
        SET is_read = #{isRead}
        WHERE id = #{id}
    </update>
    
    <!-- 3-2. 유저 알림 모두 읽음 상태 업데이트 -->
    <update id="updateAllByAccountId" parameterType="map">
    	UPDATE notification
    	SET is_read = #{isRead}
    	WHERE receiver_id=#{receiverId}
    </update>

    <!-- 4. 알림 삭제 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM notification
        WHERE id = #{id}
    </delete>

</mapper>
