<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.company.haloshop.security.mapper.JwtBlacklistMapper">

    <resultMap id="JwtBlacklistResultMap" type="com.company.haloshop.dto.security.JwtBlacklistDto">
        <id property="id" column="id" />
        <result property="accountId" column="account_id" />
        <result property="refreshToken" column="refresh_token" /> <result property="accessToken" column="access_token" />     <result property="issuedAt" column="issued_at" />         <result property="expiresAt" column="expires_at" />       <result property="blacklistedAt" column="blacklisted_at" /> <result property="reason" column="reason" />
    </resultMap>

    <select id="selectById" parameterType="long" resultMap="JwtBlacklistResultMap">
        SELECT 
            id, account_id, refresh_token, access_token, issued_at, expires_at, blacklisted_at, reason
        FROM 
            jwt_blacklist 
        WHERE 
            id = #{id}
    </select>

    <select id="selectAll" resultMap="JwtBlacklistResultMap">
        SELECT 
            id, account_id, refresh_token, access_token, issued_at, expires_at, blacklisted_at, reason
        FROM 
            jwt_blacklist
    </select>

    <insert id="insertBlacklist" parameterType="com.company.haloshop.dto.security.JwtBlacklistDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO jwt_blacklist (
            account_id, refresh_token, access_token, issued_at, expires_at, blacklisted_at, reason
        ) VALUES (
            #{accountId}, #{refreshToken}, #{accessToken}, #{issuedAt}, #{expiresAt}, #{blacklistedAt}, #{reason}
        )
    </insert>

    <update id="updateBlacklist" parameterType="com.company.haloshop.dto.security.JwtBlacklistDto">
        UPDATE jwt_blacklist
        SET
            account_id = #{accountId},
            refresh_token = #{refreshToken},
            access_token = #{accessToken},
            issued_at = #{issuedAt},
            expires_at = #{expiresAt},
            blacklisted_at = #{blacklistedAt},
            reason = #{reason}
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE FROM jwt_blacklist WHERE id = #{id}
    </delete>

    <delete id="deleteAllByAccountId" parameterType="long">
        DELETE FROM jwt_blacklist WHERE account_id = #{accountId}
    </delete>

    <select id="isTokenBlacklisted" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM jwt_blacklist WHERE access_token = #{token}
    </select>

</mapper>