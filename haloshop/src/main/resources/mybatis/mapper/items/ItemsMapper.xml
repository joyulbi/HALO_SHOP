<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.company.haloshop.items.ItemsMapper">

    <!-- 🔥 상품 등록 (PK 자동 세팅) -->
    <insert id="insert" parameterType="com.company.haloshop.dto.shop.Items"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO items (name, description, price, team_id, category_id, created_at)
        VALUES (#{name}, #{description}, #{price}, #{teamId}, #{categoryId}, NOW())
    </insert>

    <!-- 🔥 상품 목록 조회 -->
    <select id="findAll" resultType="com.company.haloshop.dto.shop.Items">
        SELECT id,
               name,
               description,
               price,
               team_id AS teamId,
               category_id AS categoryId,
               created_at AS createdAt
        FROM items
        ORDER BY id DESC
    </select>

    <!-- 🔥 상품 상세 조회 -->
    <select id="findById" parameterType="long" resultType="com.company.haloshop.dto.shop.Items">
        SELECT id,
               name,
               description,
               price,
               team_id AS teamId,
               category_id AS categoryId,
               created_at AS createdAt
        FROM items
        WHERE id = #{id}
    </select>

    <!-- 🔥 상품 수정 -->
    <update id="update" parameterType="com.company.haloshop.dto.shop.Items">
        UPDATE items
        SET name = #{name},
            description = #{description},
            price = #{price},
            team_id = #{teamId},
            category_id = #{categoryId}
        WHERE id = #{id}
    </update>

    <!-- 🔥 상품 삭제 -->
    <delete id="delete" parameterType="long">
        DELETE FROM items WHERE id = #{id}
    </delete>

    <!-- ✅ 특정 상품의 총 재고량 조회 -->
    <select id="getTotalInventoryByItemId" parameterType="long" resultType="int">
        SELECT COALESCE(SUM(inventory_volume), 0)
        FROM inventory
        WHERE items_id = #{itemId}
    </select>

    <!-- ✅ 상품명 리스트로 조회 -->
    <select id="findByNames" resultType="com.company.haloshop.dto.shop.Items">
        SELECT id,
               name,
               description,
               price,
               team_id AS teamId,
               category_id AS categoryId,
               created_at AS createdAt
        FROM items
        WHERE name IN
        <foreach item="name" collection="names" open="(" separator="," close=")">
            #{name}
        </foreach>
    </select>

    <!-- ✅ 카테고리 ID로 상품 조회 -->
    <select id="findByCategoryId" parameterType="long" resultType="com.company.haloshop.dto.shop.Items">
        SELECT id,
               name,
               description,
               price,
               team_id AS teamId,
               category_id AS categoryId,
               created_at AS createdAt
        FROM items
        WHERE category_id = #{categoryId}
        ORDER BY RAND()
        LIMIT 10
    </select>

</mapper>
